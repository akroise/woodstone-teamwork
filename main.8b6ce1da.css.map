{"version":3,"sources":["scss\\main.scss","scss\\_header.scss","scss\\_feature.scss","scss\\_section.scss","scss\\_grid.scss","scss\\mixins\\_grid-mixins.scss","scss\\_visibility.scss"],"names":[],"mappings":"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","file":"main.8b6ce1da.css","sourceRoot":"..\\src","sourcesContent":["//colors\r\n$color1: hsl(84, 2%, 91%);\r\n$color2: hsl(10, 46%, 32%);\r\n$color3: hsl(150, 8%, 95%);\r\n$color4: hsl(20, 21%, 47%);\r\n$color5: hsl(48, 19%, 31%);\r\n$color6: hsl(245, 21%, 12%);\r\n//fonts\r\n$font-large: 1rem;\r\n$font-med: 0.9rem;\r\n$font-sm:0.8rem;\r\n@import \"./header\";\r\n@import \"./feature\";\r\n@import \"./section\";\r\n@import \"./variables/main.scss\";\r\n@import \"./mixins/main.scss\";\r\n@import \"./grid\";\r\n@import \"./visibility\"; // Visibility last for precedence\r\n//using material-UI\r\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap');\r\n* {\r\n    box-sizing: border-box;\r\n    position: relative;\r\n    // outline: 1px solid red;\r\n}\r\n\r\nbody {\r\n    background-color: $color6;\r\n    margin: 0;\r\n    padding: 0;\r\n    width: 100%;\r\n    height: auto;\r\n    display: grid;\r\n    font-family: 'Poppins', sans-serif;\r\n}\r\n\r\np {\r\n    color: $color1;\r\n    display: flex;\r\n    margin: 0px;\r\n    justify-content: center;\r\n}\r\n\r\ni {\r\n    color: $color2;\r\n    text-align: center;\r\n    height: 100%;\r\n}\r\n\r\nspan {\r\n    background: $color1 !important;\r\n    color: $color2;\r\n}\r\n\r\na {\r\n    position: relative;\r\n    text-decoration: none;\r\n    font-size: $font-med +0.2rem;\r\n    color: $color2;\r\n    &:not(:last-child) {\r\n        margin-right: 30px;\r\n    }\r\n    &::before {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        height: 0.15em;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: -5px;\r\n        color: $color2;\r\n    }\r\n    &:hover {\r\n        color: rgb(0, 0, 0);\r\n        &::before {\r\n            background: $color2;\r\n        }\r\n    }\r\n}\r\n\r\n//flexbox\r\n.flex {\r\n    display: flex;\r\n    &-jc-sb {\r\n        justify-content: space-between;\r\n    }\r\n    &-jc-c {\r\n        justify-content: center;\r\n    }\r\n    &-ai-c {\r\n        align-items: center;\r\n    }\r\n}\r\n\r\nbutton,\r\n.button {\r\n    padding: 0.7rem 1.65rem;\r\n    background: $color3;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n    border: 14;\r\n}\r\n\r\n//visibility\r\n.hide-for-mobile {\r\n    @include breakpoint-down(medium) {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.hide-for-desktop {\r\n    @include breakpoint-up(medium) {\r\n        display: none;\r\n    }\r\n}\r\n\r\n//text\r\n.banner {\r\n    font-family: 'Shadows Into Light', cursive;\r\n    margin: auto;\r\n    justify-content: center;\r\n    text-align: bottom;\r\n    font-size: 50px;\r\n    padding-top: 0.01em;\r\n    justify-content: center;\r\n    width: 100% auto;\r\n    @include breakpoint-down(medium) {\r\n        padding: -20px;\r\n        width: 80%;\r\n        margin: auto;\r\n    }\r\n    @include breakpoint-down(small) {\r\n        padding-top: 30px;\r\n        width: 80%;\r\n        margin: auto;\r\n    }\r\n    @include breakpoint-up(medium) {\r\n        text-align: top;\r\n        margin-top: 100px;\r\n    }\r\n}\r\n\r\ncode {\r\n    font-family: 'Square721 BT';\r\n    font-size: 13px;\r\n    color: black;\r\n}",".header {\r\n    color: black;\r\n    margin: 0;\r\n    padding: 0;\r\n    padding: 0px;\r\n    background-color: $color3;\r\n    nav {\r\n        color: black;\r\n        top: 0;\r\n        width: 100%;\r\n        max-width: 1080px;\r\n        margin: auto;\r\n    }\r\n    &__logo {\r\n        //logo\r\n        margin-left: 0.54em;\r\n        margin-top: 0.24em;\r\n    }\r\n    &__menu {\r\n        //mobile MENU\r\n        span {\r\n            display: block;\r\n            width: 26px;\r\n            height: 2px;\r\n            background-color: $color1;\r\n        }\r\n    }\r\n    &__links {\r\n        padding-top: 1.42em;\r\n        padding-right: 0em;\r\n        color: $color2;\r\n        margin-right: 2em;\r\n        a {\r\n            position: relative;\r\n            font-size: $font-med +0.2rem;\r\n            color: $color2;\r\n            &:not(:last-child) {\r\n                margin-right: 30px;\r\n            }\r\n            &::before {\r\n                content: \"\";\r\n                display: block;\r\n                position: absolute;\r\n                height: 3px;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: -10px;\r\n                color: $color2;\r\n            }\r\n            &:hover {\r\n                color: rgb(0, 0, 0);\r\n                &::before {\r\n                    background: $color2;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    &__cta {\r\n        font-size: $font-med;\r\n        color: $color2;\r\n    }\r\n}\r\n\r\n.circleBehind a:before,\r\n.circleBehind a:after {\r\n    position: absolute;\r\n    top: 22px;\r\n    left: 50%;\r\n    width: 50px;\r\n    height: 50px;\r\n    border: 4px solid #0277bd;\r\n    transform: translateX(-50%) translateY(-50%) scale(0.8);\r\n    border-radius: 50%;\r\n    background: transparent;\r\n    content: \"\";\r\n    opacity: 0;\r\n    transition: all 0.3s;\r\n    z-index: -1;\r\n}","@media (min-width: 64em) {\r\n    ///styles go here\r\n}\r\n\r\n//640px, 1024px, 1400px\r\n$breakpoints-up:(\"medium\":\"45em\", \"large\":\"64em\");\r\n//639px, 1024px, 1399px\r\n$breakpoints-down:(\"small\":\"40em\", \"medium\":\"45em\", \"large\":\"64em\");\r\n@mixin breakpoint-up($size) {\r\n    @media (min-width: map-get($breakpoints-up, $size)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin breakpoint-down($size) {\r\n    @media (max-width: map-get($breakpoints-down, $size)) {\r\n        @content;\r\n    }\r\n}\r\n\r\n@mixin bgConfig {\r\n    background-size: cover;\r\n    background-position: center center;\r\n}\r\n\r\n.scrolling-wrapper {\r\n    overflow-x: scroll;\r\n    max-width: 1080px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    padding-left: 16px;\r\n    padding-right: 16px;\r\n    padding-top: 10px;\r\n    padding-bottom: 10px;\r\n    overflow-y: hidden;\r\n    white-space: nowrap;\r\n    grid-gap: 16px;\r\n    justify-content: center;\r\n    @include breakpoint-up(large) {\r\n        display: grid;\r\n    }\r\n    @include breakpoint-up(medium) {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        max-width: 750px;\r\n        align-items: right;\r\n    }\r\n    @include breakpoint-down(medium) {\r\n        display: grid;\r\n        grid-template-columns: 1.5fr 1.5fr;\r\n        width: 500px;\r\n        margin: auto;\r\n    }\r\n    @include breakpoint-down(small) {\r\n        display: block;\r\n        padding: 0rem;\r\n        margin-left: -20px;\r\n        margin-right: 0;\r\n        padding-left: 30px;\r\n        padding-right: 0px;\r\n        padding-top: 0px;\r\n        padding-bottom: 0px;\r\n    }\r\n    -webkit-overflow-scrolling: touch;\r\n    &::-webkit-scrollbar {\r\n        display: block;\r\n        height: 9px;\r\n        border-radius: 50px;\r\n        @include breakpoint-down(small) {\r\n            display: none;\r\n        }\r\n    }\r\n    &::-webkit-scrollbar-thumb {\r\n        width: 5px;\r\n        border-radius: 50px;\r\n        background: $color2;\r\n        border-radius: 50px;\r\n    }\r\n    .card {\r\n        display: inline-block;\r\n        overflow: hidden;\r\n        transition: all 100ms ease-in-out;\r\n        box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n        max-height: 18.5rem;\r\n        min-height: 18.5rem;\r\n        max-width: 12.5rem;\r\n        min-width: 12.5rem;\r\n        margin: 0.2rem;\r\n        padding: 0;\r\n        &:hover .card__visual {\r\n            background: url(\"../assests/home1.jpeg\") no-repeat;\r\n            @include bgConfig;\r\n            transform: scale(0.9);\r\n            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);\r\n            height: 14rem;\r\n        }\r\n        &__visual {\r\n            background: url(\"../assests/home2.jpeg\") no-repeat;\r\n            height: 17rem;\r\n            width: 100%;\r\n            @include bgConfig;\r\n            position: relative;\r\n            transition: all .7s ease;\r\n        }\r\n        &__texts {\r\n            padding-top: -1rem;\r\n            cursor: default;\r\n            padding: 0.1rem;\r\n            width: 100%;\r\n            .title {\r\n                margin: -0.1rem;\r\n                padding-left: 1rem;\r\n                font-size: 1rem;\r\n                color: #57606f;\r\n            }\r\n            .subtitle {\r\n                margin: -1.2rem;\r\n                padding: 0;\r\n                text-align: right;\r\n                padding-left: 7.1rem;\r\n                font-size: 0.71rem;\r\n                color: #747d8c;\r\n            }\r\n            .read {\r\n                display: grid;\r\n                margin: 1.8rem;\r\n                text-align: right;\r\n                padding: 0.8rem;\r\n                padding-left: 6rem;\r\n                font-size: 0.71rem;\r\n                color: #747d8c;\r\n            }\r\n        }\r\n        a {\r\n            color: black;\r\n            font-size: 0.7rem;\r\n            padding-left: 7rem;\r\n            margin: 1.2rem;\r\n            cursor: pointer;\r\n            &::before {\r\n                content: \"\";\r\n                display: block;\r\n                position: absolute;\r\n                height: 0em;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0px;\r\n                color: $color2;\r\n            }\r\n            &:hover {\r\n                &::before {\r\n                    background-color: white;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".section1 {\r\n    background-color: $color1;\r\n    //height: auto;\r\n    width: 100%;\r\n    max-height: 1000px;\r\n    margin: 0;\r\n    padding: 0;\r\n    &__data {\r\n        margin: 0;\r\n        padding: 0;\r\n        color: $color1;\r\n        max-width: 1080px;\r\n        width: 100%;\r\n        margin: auto;\r\n        padding: 0;\r\n        .dim {\r\n            font-size: large;\r\n            max-width: 400px;\r\n            color: black;\r\n            padding: 0.01rem;\r\n            margin-top: 0;\r\n        }\r\n    }\r\n}\r\n\r\n.section2 {\r\n    max-height: 700px;\r\n    height: 100%;\r\n    background-color: $color5;\r\n    padding: 0px;\r\n    &__data {\r\n        color: $color1;\r\n        height: 100%;\r\n        max-width: 900px;\r\n        .dim {\r\n            color: white;\r\n            padding: 1.6em;\r\n            font-size: 1.1em;\r\n        }\r\n        margin: auto;\r\n    }\r\n    .visiting-card {\r\n        color: black;\r\n        width: 50%;\r\n        position: absolute;\r\n        &::before {\r\n            content: \"\";\r\n            display: none;\r\n        }\r\n        &:hover {\r\n            display: block;\r\n            &::before {\r\n                background-color: white;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfooter {\r\n    display: flex;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    flex-wrap: wrap;\r\n    text-align: left;\r\n    justify-content: space-evenly;\r\n    align-items: flex-start;\r\n    max-width: 1080px;\r\n    white-space: nowrap;\r\n    grid-gap: 16px;\r\n    justify-content: center;\r\n    @include breakpoint-down(small) {\r\n        display: subgrid;\r\n        grid-row-gap: 1px;\r\n        grid-column-gap: 9px;\r\n    }\r\n    a {\r\n        color: black;\r\n        cursor: pointer;\r\n        text-align: right;\r\n        &::before {\r\n            content: \"\";\r\n            display: block;\r\n            position: absolute;\r\n            height: 0em;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0px;\r\n            color: $color2;\r\n        }\r\n        &:hover {\r\n            &::before {\r\n                background-color: $color3;\r\n            }\r\n        }\r\n    }\r\n    k {\r\n        font-family: 'Helvetica Neue', sans-serif;\r\n        padding: 0;\r\n        color: $color1;\r\n        font-size: 0.7rem;\r\n        text-align: right;\r\n        &:hover {\r\n            color: gainsboro;\r\n        }\r\n    }\r\n    p {\r\n        font-size: $font-med;\r\n        padding: 0.3rem;\r\n    }\r\n    code {\r\n        color: $color1;\r\n        &:hover {\r\n            color: gainsboro;\r\n        }\r\n    }\r\n    .address {\r\n        padding-left: 10px;\r\n        padding-right: 20px;\r\n        text-align: left;\r\n    }\r\n    .contact {\r\n        text-align: center;\r\n    }\r\n}","// Creds to https://github.com/kristoferjoseph/flexboxgrid\n// No gutters\n// No text alignment with justified container classes (center-xs, for example)\n\n.row {\n  @include row();\n}\n\n.row.reverse {\n  @include row-reverse();\n}\n\n.row.natural-height {\n  @include row-natural-height();\n}\n\n.row.flex-column {\n  @include row-flex-column();\n}\n\n.col {\n  @include col();\n}\n\n.col.reverse {\n  @include col-reverse();\n}\n\n.first {\n  order: -1;\n}\n\n.last {\n  order: 1;\n}\n\n.align-start {\n  align-self: flex-start;\n}\n\n.align-end {\n  align-self: flex-end;\n}\n\n.align-center {\n  align-self: center;\n}\n\n.align-baseline {\n  align-self: baseline;\n}\n\n.align-stretch {\n    align-self: stretch;\n}\n\n// Mixin to run inside of for loop - creates col/breakpoint classes * Not for developer use *\n@mixin col-factory($thisPrefix) {\n  .col-#{$thisPrefix} {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  }\n  @for $i from 1 through $grid-columns {\n    .col-#{$thisPrefix}-#{$i} {\n      box-sizing: border-box;\n      flex-basis: 100% / $grid-columns * $i;\n      max-width: 100% / $grid-columns * $i;\n      padding: $gutter;\n    }\n    .col-#{$thisPrefix}-offset-#{$i} {\n      margin-left: 100% / $grid-columns * $i;\n    }\n  }\n  .row.start-#{$thisPrefix} {\n    justify-content: flex-start;\n  }\n  .row.center-#{$thisPrefix} {\n    justify-content: center;\n  }\n  .row.end-#{$thisPrefix} {\n    justify-content: flex-end;\n  }\n  .row.top-#{$thisPrefix} {\n    align-items: flex-start;\n  }\n  .row.middle-#{$thisPrefix} {\n    align-items: center;\n  }\n  .row.bottom-#{$thisPrefix} {\n    align-items: flex-end;\n  }\n  .row.around-#{$thisPrefix} {\n    justify-content: space-around;\n  }\n  .row.between-#{$thisPrefix} {\n    justify-content: space-between;\n  }\n  .first-#{$thisPrefix} {\n    order: -1;\n  }\n  .last-#{$thisPrefix} {\n    order: 1;\n  }\n} // Mixin to run inside of for loop - creates col/breakpoint classes\n\n@for $i from 1 through length($breakpoint-up-prefixes) {\n  $thisPrefix: nth($breakpoint-up-prefixes, $i);\n  @if $thisPrefix == \"xs\" {\n    @include col-factory($thisPrefix);\n  } @else if $thisPrefix == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-factory($thisPrefix);\n    }\n  } @else if $thisPrefix == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-factory($thisPrefix);\n    }\n  }\n}\n\n.col-gutter-lr {\n    padding: 0 $gutter;\n}\n\n.col-no-gutter {\n    padding: 0;\n}\n","@mixin row($full-width: \"false\") {\n  box-sizing: border-box;\n  margin: 0 auto;\n  width: 100%;\n  display: -webkit-flex;\n  display: -ms-flexbox;\n  display: flex;\n  flex: 0 1 auto;\n  flex-direction: row;\n  flex-wrap: wrap;\n  // // Overrides flexbox's default behavior of making all children equal height\n  // align-items: flex-start; // If this was not in place it would require two classes to make a row full of unequal height columns aligned top, middle, bottom\n  @if type-of($content-well-max-width) == number and $content-well-max-width != 0 and $full-width == \"false\"{\n    max-width: $content-well-max-width;\n  }\n}\n\n@mixin row-reverse() {\n  flex-direction: row-reverse;\n}\n\n@mixin row-natural-height() {\n  align-items: flex-start;\n}\n\n@mixin row-flex-column() {\n  flex-direction: column;\n}\n\n@mixin col-reverse() {\n  flex-direction: column-reverse;\n}\n\n// Condition to run inside of the col mixin * not for developer use *\n@mixin col-condition($col-number) {\n  @if type-of($col-number) == number {\n    @if $col-number > $grid-columns or $col-number == 0 {\n      @warn \"Column number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n    } @else {\n      box-sizing: border-box;\n      flex-basis: 100% / $grid-columns * $col-number;\n      max-width: 100% / $grid-columns * $col-number;\n      padding: $gutter;\n    }\n  // If no col number is passed then arg is set to \"auto\" by default\n  // \"auto\" mode fills the horizontal space with evenly sized containers\n  } @else if $col-number == \"auto\" {\n    box-sizing: border-box;\n    flex-grow: 1;\n    flex-basis: 0;\n    max-width: 100%;\n    padding: $gutter;\n  } @else {\n    @warn \"Column number argument must either be the string 'auto' or a number greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  }\n} // Condition to run inside of the col mixin * not for developer use *\n\n@mixin col($breakpoint: \"xs\", $col-number: \"auto\") {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $col-number: $breakpoint;\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-condition($col-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-condition($col-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-condition($col-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n// Condition to run inside of the col-offset mixin * not for developer use *\n@mixin col-offset-condition($offset-number) {\n  @if type-of($offset-number) != number {\n    @warn \"Column offset number must be a number (only arg or second arg in the col mixin)\";\n  } @else if $offset-number == 0 {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else if $offset-number > $grid-columns {\n    @warn \"Column offset number must be greater than 0 and less than or equal to total number of columns in the grid (#{$grid-columns})\";\n  } @else {\n    margin-left: 100% / $grid-columns * $offset-number;\n  }\n} // Condition to run inside of the col-offset mixin * not for developer use *\n\n@mixin col-offset($breakpoint: \"xs\", $offset-number: 0) {\n  // If no breakpoint is passed and a col number is just use the first arg as the col number and act like xs\n  @if type-of($breakpoint) == number {\n    $offset-number: $breakpoint;\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"xs\" {\n    @include col-offset-condition($offset-number);\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      @include col-offset-condition($offset-number);\n    }\n  } @else {\n    @warn \"col mixin requires one of the existing breakpoint prefixes (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin start($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-start;\n    }\n  } @else {\n    @warn \"start mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin center($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: center;\n    }\n  } @else {\n    @warn \"center mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin end($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: flex-end;\n    }\n  } @else {\n    @warn \"end mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin top($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-start;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-start;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-start;\n    }\n  } @else {\n    @warn \"top mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin middle($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: center;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: center;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: center;\n    }\n  } @else {\n    @warn \"middle mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin bottom($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    align-items: flex-end;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      align-items: flex-end;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      align-items: flex-end;\n    }\n  } @else {\n    @warn \"bottom mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin around($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-around;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-around;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-around;\n    }\n  } @else {\n    @warn \"around mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin between($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    justify-content: space-between;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      justify-content: space-between;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      justify-content: space-between;\n    }\n  } @else {\n    @warn \"between mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin first($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: -1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: -1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: -1;\n    }\n  } @else {\n    @warn \"first mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n\n@mixin last($breakpoint: \"xs\") {\n  @if $breakpoint == \"xs\" {\n    order: 1;\n  } @else if $breakpoint == \"sm\" {\n    @media #{$breakpoint-sm-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"md\" {\n    @media #{$breakpoint-md-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"lg\" {\n    @media #{$breakpoint-lg-up} {\n      order: 1;\n    }\n  } @else if $breakpoint == \"xl\" {\n    @media #{$breakpoint-xl-up} {\n      order: 1;\n    }\n  } @else {\n    @warn \"last mixin arg must be one of the existing breakpoints (#{$breakpoint-up-prefixes})\";\n  }\n}\n",".show {\n    display: block !important;\n}\n\n.row.show {\n    display: -webkit-flex !important;\n    display: -ms-flexbox !important;\n    display: flex !important;\n}\n\n.hide {\n    display: none !important;\n}\n\n// Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n@mixin vis-factory($thisPrefix) {\n    .show-#{$thisPrefix} {\n        display: block !important;\n    }\n    .row.show-#{$thisPrefix} {\n        display: -webkit-flex !important;\n        display: -ms-flexbox !important;\n        display: flex !important;\n    }\n    .hide-#{$thisPrefix} {\n        display: none !important;\n    }\n} // Mixin to run inside of for loop - creates visibility classes * Not for developer use *\n@for $i from 1 through length($breakpoint-all-prefixes) {\n    $thisPrefix: nth($breakpoint-all-prefixes, $i);\n    @if $thisPrefix==\"xs\" {\n        @include vis-factory($thisPrefix);\n    }\n    @else if $thisPrefix==\"xs-only\" {\n        @media #{$breakpoint-xs-only} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n    @else if $thisPrefix==\"sm\" {\n        @media #{$breakpoint-sm-up} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n    @else if $thisPrefix==\"sm-only\" {\n        @media #{$breakpoint-sm-only} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n    @else if $thisPrefix==\"md\" {\n        @media #{$breakpoint-md-up} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n    @else if $thisPrefix==\"md-only\" {\n        @media #{$breakpoint-md-only} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n    @else if $thisPrefix==\"lg\" {\n        @media #{$breakpoint-lg-up} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n    @else if $thisPrefix==\"lg-only\" {\n        @media #{$breakpoint-lg-only} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n    @else if $thisPrefix==\"xl\" {\n        @media #{$breakpoint-xl-up} {\n            @include vis-factory($thisPrefix);\n        }\n    }\n}"]}